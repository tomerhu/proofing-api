# .github/workflows/ci-cd.yml

name: CI/CD

on:
  push:
    branches:
      - master

env:
  REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}       # e.g. proofreadingacr-<hash>.azurecr.io
  ACR_NAME: ${{ secrets.ACR_NAME }}               # e.g. proofreadingacr
  AZ_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Login to Azure
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Ensure CLI is using the correct subscription
      - name: Set Azure subscription
        run: |
          echo "Switching to subscription $AZ_SUBSCRIPTION_ID"
          az account set --subscription "$AZ_SUBSCRIPTION_ID"
          echo "Current subscription: $(az account show --query name -o tsv)"

      # 4. Verify & login to ACR
      - name: ACR login
        run: |
          echo "Verifying ACR exists: $ACR_NAME"
          az acr show --name "$ACR_NAME" --only-show-errors
          echo "Logging in to ACR: $ACR_NAME"
          az acr login --name "$ACR_NAME"

      # 5. Build a SHA‐tagged image
      - name: Build Docker image
        run: |
          SHA_IMAGE="$REGISTRY/proofreading-api:${{ github.sha }}"
          echo "Building $SHA_IMAGE"
          docker build . -t "$SHA_IMAGE"

      # 6. Run & smoke-test
      - name: Run & smoke-test container
        run: |
          SHA_IMAGE="$REGISTRY/proofreading-api:${{ github.sha }}"
          docker run -d --name api-test -p 8000:8000 "$SHA_IMAGE"
          for i in {1..10}; do
            if curl --fail http://localhost:8000/ping > /dev/null 2>&1; then
              echo "✅ Service is up"
              break
            fi
            echo "⏳ Waiting… ($i/10)"
            sleep 2
          done
          if ! curl --fail http://localhost:8000/ping > /dev/null 2>&1; then
            echo "❌ Service did not start; dumping logs:" >&2
            docker logs api-test >&2
            exit 1
          fi

      # 7. Tear down
      - name: Tear down test container
        if: always()
        run: |
          docker stop api-test || true
          docker rm api-test  || true

      # 8. Tag & push SHA and latest
      - name: Tag & push images to ACR
        run: |
          SHA_IMAGE="$REGISTRY/proofreading-api:${{ github.sha }}"
          LATEST_IMAGE="$REGISTRY/proofreading-api:latest"
          echo "Pushing $SHA_IMAGE"
          docker push "$SHA_IMAGE"
          echo "Tagging $LATEST_IMAGE"
          docker tag "$SHA_IMAGE" "$LATEST_IMAGE"
          echo "Pushing $LATEST_IMAGE"
          docker push "$LATEST_IMAGE"

      # 9. Deploy to Web App for Containers
      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: proofreader-app-container
          images:   ${{ env.REGISTRY }}/proofreading-api:latest
