# .github/workflows/ci-cd.yml

name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR login
        run: |
          REGISTRY=${{ secrets.ACR_LOGIN_SERVER }}
          ACR_NAME=${REGISTRY%%.*}          # strip off .azurecr.io
          az acr login --name "$ACR_NAME"

      - name: Build Docker image
        run: |
          REGISTRY=${{ secrets.ACR_LOGIN_SERVER }}
          IMAGE_SHA="$REGISTRY/proofreading-api:${{ github.sha }}"
          echo "Building $IMAGE_SHA"
          docker build . -t "$IMAGE_SHA"

      - name: Run & smoke-test container
        run: |
          IMAGE_SHA="${{ secrets.ACR_LOGIN_SERVER }}/proofreading-api:${{ github.sha }}"
          docker run -d --name api-test -p 8000:8000 "$IMAGE_SHA"
          for i in {1..10}; do
            if curl --fail http://localhost:8000/ping > /dev/null 2>&1; then
              echo "✅ Service is up"
              break
            fi
            echo "⏳ Waiting… ($i/10)"
            sleep 2
          done
          if ! curl --fail http://localhost:8000/ping > /dev/null 2>&1; then
            echo "❌ Service did not start in time; dumping logs:" >&2
            docker logs api-test >&2
            exit 1
          fi

      - name: Tear down test container
        if: always()
        run: |
          docker stop api-test || true
          docker rm api-test  || true

      - name: Tag & push images to ACR
        run: |
          REGISTRY=${{ secrets.ACR_LOGIN_SERVER }}
          IMAGE_SHA="$REGISTRY/proofreading-api:${{ github.sha }}"
          IMAGE_LATEST="$REGISTRY/proofreading-api:latest"
          docker tag "$IMAGE_SHA" "$IMAGE_LATEST"
          docker push "$IMAGE_SHA"
          docker push "$IMAGE_LATEST"

      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: proofreader-app-container
          images: ${{ secrets.ACR_LOGIN_SERVER }}/proofreading-api:latest
