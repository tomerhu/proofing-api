name: CI/CD

on:
  push:
    branches:
      - master

env:
  REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}  # your ACR login server

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username:     ${{ secrets.ACR_USERNAME }}
          password:     ${{ secrets.ACR_PASSWORD }}

      - name: Build Docker image
        run: |
          SHA_IMAGE="$REGISTRY/proofreading-api:${{ github.sha }}"
          echo "üõ† Building $SHA_IMAGE"
          docker build . -t "$SHA_IMAGE"

      - name: Run & smoke-test container
        run: |
          SHA_IMAGE="$REGISTRY/proofreading-api:${{ github.sha }}"
          docker run -d --name api-test \
            -p 8000:8000 \
            -e APPINSIGHTS_CONNECTION_STRING="${{ secrets.APPINSIGHTS_CONNECTION_STRING }}" \
            "$SHA_IMAGE"

          for i in {1..10}; do
            if curl --fail http://localhost:8000/ping >/dev/null 2>&1; then
              echo "‚úÖ Service is up"
              break
            fi
            echo "‚è≥ Waiting‚Ä¶ ($i/10)"
            sleep 2
          done

          if ! curl --fail http://localhost:8000/ping >/dev/null 2>&1; then
            echo "‚ùå Service did not start; dumping logs:" >&2
            docker logs api-test >&2
            exit 1
          fi

      - name: Tear down test container
        if: always()
        run: |
          docker stop api-test || true
          docker rm api-test   || true

      - name: Tag & push images to ACR
        run: |
          SHA_IMAGE="$REGISTRY/proofreading-api:${{ github.sha }}"
          LATEST_IMAGE="$REGISTRY/proofreading-api:latest"
          echo "üì§ Pushing SHA image"
          docker push "$SHA_IMAGE"
          echo "üè∑ Tagging latest"
          docker tag "$SHA_IMAGE" "$LATEST_IMAGE"
          echo "üì§ Pushing latest"
          docker push "$LATEST_IMAGE"

      # ‚Üê Insert Azure login here so azure/webapps-deploy has credentials
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name:        proofreader-app-container
          resource-group:  ${{ secrets.AZURE_RESOURCE_GROUP }}
          images:          ${{ env.REGISTRY }}/proofreading-api:latest
