# .github/workflows/ci-cd.yml

name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out your code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Python (for local tests, not strictly needed for Docker build)
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3. Install Python deps for code-based smoke test
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Build with Docker
      - name: Build Docker image
        run: |
          docker build . -t proofreading-api:test

      # 5. Run container and smoke-test it
      - name: Run & test container
        run: |
          docker run -d --name api-test -p 8000:8000 proofreading-api:test
          for i in {1..10}; do
            if curl --fail http://localhost:8000/ping >/dev/null 2>&1; then
              echo "✅ Service is up"
              break
            fi
            echo "⏳ Waiting for service… ($i/10)"
            sleep 2
          done

          if ! curl --fail http://localhost:8000/ping >/dev/null 2>&1; then
            echo "❌ Service did not start in time; dumping logs:" >&2
            docker logs api-test >&2
            exit 1
          fi
      - name: Tear down test container
        if: always()
        run: |
          docker stop api-test || true
          docker rm api-test  || true

      # 6. Log in to ACR
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username:     ${{ secrets.ACR_USERNAME }}
          password:     ${{ secrets.ACR_PASSWORD }}

      # 7. Tag & push to ACR
      - name: Tag & push image to ACR
        run: |
          docker tag proofreading-api:test \
            ${{ secrets.ACR_LOGIN_SERVER }}/proofreading-api:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/proofreading-api:latest

      # 8. Log in to Azure for deployment
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 9. Deploy to Azure Web App for Containers
      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          images:   ${{ secrets.ACR_LOGIN_SERVER }}/proofreading-api:latest
